// Firebase Security Rules
// These rules should be applied to your Firebase project

// ========================================
// FIRESTORE SECURITY RULES
// ========================================

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Books collection - anyone can read, only admins can write
    match /books/{bookId} {
      allow read: if true; // Anyone can read books
      allow write: if request.auth != null && 
        (request.auth.token.email == 'admin@bookworldindia.com' || 
         request.auth.token.email == 'muskanagarwaljuly8@gmail.com');
    }
    
    // Categories collection - anyone can read, only admins can write
    match /categories/{categoryId} {
      allow read: if true; // Anyone can read categories
      allow write: if request.auth != null && 
        (request.auth.token.email == 'admin@bookworldindia.com' || 
         request.auth.token.email == 'muskanagarwaljuly8@gmail.com');
    }
    
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Cart subcollection - users can only access their own cart
      match /cart/{cartItemId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Wishlist subcollection - users can only access their own wishlist
      match /wishlist/{wishlistItemId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Orders subcollection - users can only access their own orders
      match /orders/{orderId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}

// ========================================
// STORAGE SECURITY RULES
// ========================================

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Book images - anyone can read, only admins can upload
    match /book-images/{imageId} {
      allow read: if true; // Anyone can view book images
      allow write: if request.auth != null && 
        (request.auth.token.email == 'admin@bookworldindia.com' || 
         request.auth.token.email == 'muskanagarwaljuly8@gmail.com');
    }
    
    // Profile images - users can only upload their own profile images
    match /profile-images/{userId}/{imageId} {
      allow read: if true; // Anyone can view profile images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Category images - anyone can read, only admins can upload
    match /category-images/{imageId} {
      allow read: if true; // Anyone can view category images
      allow write: if request.auth != null && 
        (request.auth.token.email == 'admin@bookworldindia.com' || 
         request.auth.token.email == 'muskanagarwaljuly8@gmail.com');
    }
  }
}

// ========================================
// ADDITIONAL SECURITY CONSIDERATIONS
// ========================================

/*
1. Enable Authentication Methods:
   - Email/Password
   - Google Sign-In
   - Phone (optional)

2. Set up Firebase Functions for additional security:
   - Validate user permissions
   - Process payments
   - Send notifications

3. Enable App Check for additional protection

4. Set up proper CORS rules for your domain

5. Configure Firebase Hosting:
   - Set up custom domain
   - Enable HTTPS
   - Configure caching rules

6. Database Indexes:
   Create the following composite indexes in Firestore:
   - books: category (Ascending) + createdAt (Descending)
   - books: rating (Descending) + createdAt (Descending)
   - books: price (Ascending) + createdAt (Descending)
   - books: author (Ascending) + createdAt (Descending)
   - users/{userId}/orders: status (Ascending) + createdAt (Descending)
   - users/{userId}/cart: bookId (Ascending) + addedAt (Descending)
   - users/{userId}/wishlist: bookId (Ascending) + addedAt (Descending)

7. Backup Strategy:
   - Enable Firestore backups
   - Set up automated exports
   - Store backups in multiple locations

8. Monitoring:
   - Set up Firebase Analytics
   - Configure error reporting
   - Monitor performance metrics
*/ 